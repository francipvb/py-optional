name: Test

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - optional/
      - tests/
      - pyproject.toml
      - poetry.lock
      - pytest.ini
  push:
    branches:
      - main
      - develop

    paths:
      - optional/
      - tests/
      - pyproject.toml
      - poetry.lock
      - pytest.ini

jobs:
  run-tests:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
      - name: Install poetry
        run: |
          pipx install poetry~=1.8.0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: poetry

      - name: Get full python version
        id: full-python-version
        run: echo python-version=$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))") >> $GITHUB_OUTPUT

      - name: Install Dependencies
        run: poetry install

      - name: Run tests
        run: poetry run pytest --cov=optional --cov=tests --cov-report=lcov
        continue-on-error: true
      - name: Upload coverage
        uses: coverallsapp/github-action@v2
        with:
          flag-name: python${{ matrix.python-version }}
          parallel: true
          compare-ref: ${{ github.base_ref }}

  upload-coverage:
    needs: run-tests
    runs-on: ubuntu-latest
    steps:
      - name: Upload coverage
        uses: coverallsapp/github-action@v2
        with:
          parallel-finished: true

  run-lints:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: pipx install poetry~=1.8.0
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
          cache: "poetry"

      - run: poetry run mypy optional/ tests/
        name: "Run mypy"
      - run: poetry run pyright optional/ tests/
        name: "Run pyright"
